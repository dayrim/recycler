{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","fonts/index.js","serviceWorker.js","reducers/layout.js","constants/layout.js","reducers/index.js","store.js","components/layout/layout.js","components/topmenu/topmenu.js","actions/layout.js","components/footer/footer.js","index.js","routes/index.js"],"names":["map","./","./index","./index.js","./landing/hashroutes","./landing/hashroutes/","./landing/hashroutes/index","./landing/hashroutes/index.js","./landing/hashroutes/section1/section1","./landing/hashroutes/section1/section1.js","./landing/hashroutes/section2/section2","./landing/hashroutes/section2/section2.js","./landing/hashroutes/section3/section3","./landing/hashroutes/section3/section3.js","./landing/hashroutes/section4/section4","./landing/hashroutes/section4/section4.js","./landing/hashroutes/section5/section5","./landing/hashroutes/section5/section5.js","./landing/landing","./landing/landing.js","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","defaultFonts","Boolean","window","location","hostname","match","initState","topmenuToggled","reducer","state","arguments","length","undefined","action","type","assign","payload","reducers","history","combineReducers","router","connectRouter","layout","createBrowserHistory","theme","createMuiTheme","palette","secondary","main","light","dark","contrastText","primary","typography","fontFamily","join","overrides","MuiDivider","root","height","margin","Layout","react_default","a","createElement","ThemeProvider","topmenu","this","props","children","Component","HashLink","genericHashLink","Link","useStyles","makeStyles","flexContainer","display","justifyContent","alignItems","flexDirection","logo","width","menuBar","transition","collapsed","top","toolbarItem","connect","dispatch","toggleTopmenu","layoutActions","classes","_useState","useState","_useState2","slicedToArray","activeLink","setActiveLink","useEffect","addEventListener","lodashThrottle","document","documentElement","scrollTop","leading","trailing","removeEventListener","configureAnchors","offset","onSectionEnter","newState","oldState","hash","Fragment","AppBar","position","color","className","Container","src","alt","Typography","variant","align","Toolbar","routes","route","key","hashroutes","topmenu_HashLink","to","concat","scroll","el","topOfElement","offsetTop","behavior","hashroutenames","Footer","preloadedState","store","createStore","createRootReducer","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","name","console","log","WebFont","google","families","loadFonts","react_redux_es","CssBaseline","esm","layout_layout","react_router","react","fallback","path","component","React","lazy","componentpath","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.832bda56.chunk.js","sourcesContent":["var map = {\n\t\"./\": [\n\t\t52,\n\t\t0,\n\t\t1,\n\t\t4\n\t],\n\t\"./index\": [\n\t\t52,\n\t\t0,\n\t\t1,\n\t\t4\n\t],\n\t\"./index.js\": [\n\t\t52,\n\t\t0,\n\t\t1,\n\t\t4\n\t],\n\t\"./landing/hashroutes\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./landing/hashroutes/\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./landing/hashroutes/index\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./landing/hashroutes/index.js\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./landing/hashroutes/section1/section1\": [\n\t\t70,\n\t\t0,\n\t\t3,\n\t\t5\n\t],\n\t\"./landing/hashroutes/section1/section1.js\": [\n\t\t70,\n\t\t0,\n\t\t3,\n\t\t5\n\t],\n\t\"./landing/hashroutes/section2/section2\": [\n\t\t71,\n\t\t6\n\t],\n\t\"./landing/hashroutes/section2/section2.js\": [\n\t\t71,\n\t\t6\n\t],\n\t\"./landing/hashroutes/section3/section3\": [\n\t\t72,\n\t\t7\n\t],\n\t\"./landing/hashroutes/section3/section3.js\": [\n\t\t72,\n\t\t7\n\t],\n\t\"./landing/hashroutes/section4/section4\": [\n\t\t73,\n\t\t8\n\t],\n\t\"./landing/hashroutes/section4/section4.js\": [\n\t\t73,\n\t\t8\n\t],\n\t\"./landing/hashroutes/section5/section5\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./landing/hashroutes/section5/section5.js\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./landing/landing\": [\n\t\t69,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./landing/landing.js\": [\n\t\t69,\n\t\t0,\n\t\t1,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 107;\nmodule.exports = webpackAsyncContext;","const defaultFonts = [\n    \"Material Icons\",\n    //     \"Nixie One\",\n    //   \"Josefin Slab\",\n    //   \"Lilita One\",\n    //   \"Bowlby One SC\",\n    //   \"Alegreyaa Sans SC\",\n    //   \"Grand Hotel\",\n    //       \"Patua One\",\n    //       \"Vidolaka\",\n    //       \"Hammersmith One\",\n    // \"Open Sans\",\n    \"Roboto\",\n    // \"Roboto Slab\",\n    // \"Coustard\",\n    // \"Roboto Condensed\",\n    // \"Lato\",\n    // \"Oswald\",\n    // \"Lora\",\n    // \"Raleway\",\n    // \"Londrina Solid\",\n    // \"Montserrat\",\n    // \"Merriweather\",\n    // \"Indie Flower\",\n    // \"Dosis\",\n    // \"Arvo\",\n    // \"Abel\"\n  \n  ];\nexport default defaultFonts ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as layoutTypes from '../constants/layout.js'\n\nconst initState = {\n  topmenuToggled: true\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case layoutTypes.TOGGLE_TOPMENU:\n      return Object.assign({}, state, {\n        topmenuToggled: action.payload\n      })\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","export const TOGGLE_TOPMENU = 'TOGGLE_TOPMENU';","import { combineReducers } from 'redux';\nimport layout from './layout';\nimport { connectRouter } from 'connected-react-router'\n \nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  layout\n\n})","\nimport { createBrowserHistory } from 'history'\nimport { applyMiddleware, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const history = createBrowserHistory()\n \nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    \n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk\n      ),\n    ),\n  )\n \n  return store\n}","import React,{Component} from \"react\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport {Topmenu} from '../../components'\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#2c6f47',\n      light: '#529168',\n      dark: '#003816',\n      contrastText: '#ffffff',\n    },\n    primary: {\n      main: '#162a50',\n      light: '#44527c',\n      dark: '#000028',\n      contrastText: '#ffffff',\n    },\n  },\n    typography: {\n    fontFamily: [\n\n      'Roboto',\n\n    ].join(','),\n  },\n  overrides: {\n    MuiDivider: { \n      root: { \n        height: '0',\n        margin: '10px', \n      },\n    },\n  },\n});\n\nclass Layout extends Component {\n\n    render() {\n      return (\n          <div>\n           \n              <ThemeProvider theme={theme}>\n              <Topmenu/>\n              {this.props.children}\n              </ThemeProvider>\n              \n          </div>\n      );\n    }\n  }\n  \n  export default Layout\n\n","\n\n\nimport React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { connect } from \"react-redux\";\nimport routes from '../../routes';\nimport { genericHashLink } from 'react-router-hash-link';\nimport { configureAnchors } from 'react-update-url-on-scroll'\nimport lodashThrottle from 'lodash/throttle';\nimport * as layoutActions from '../../actions/layout.js';\nimport Link from '@material-ui/core/Link';\n\n\n  \nconst HashLink = (props) => genericHashLink(props, Link);\n\n\nconst mapStateToProps = state => ({\n    topmenuToggled: state.layout.topmenuToggled\n  });\nconst mapDispatchToProps = (dispatch) => ({\n    toggleTopmenu: (payload) => dispatch(layoutActions.toggleTopmenu(payload)),\n  });\nconst useStyles = makeStyles(theme => ({\n    flexContainer:{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n    },\n    logo:{\n        width: \"150px\"\n    },\n    menuBar:{\n        height: \"225px\",\n        transition: \"all 0.5s cubic-bezier(0.8, 0.05, 0.4, 1)\"\n \n    },\n    collapsed:{\n        top:'-160px',\n    },\n    toolbarItem:{\n        margin: \"0 15px\"\n\n    }\n}));\n\nfunction Topmenu(props) {\n  const classes = useStyles();\n  let [activeLink, setActiveLink] = useState('');\n\n  useEffect(() => {\n    window.addEventListener(\n        'scroll',\n        lodashThrottle(()=> {\n            if (document.documentElement.scrollTop > 25 ) {\n            props.toggleTopmenu(false)\n            } else {\n            props.toggleTopmenu(true)\n            }\n          },\n          300,\n          { leading: true, trailing: true }\n        )\n      );\n  \n    return () => {\n      window.removeEventListener('scroll', () => {\n\n\n      })\n    }\n  }, [props, props.topmenuToggled])\n\n  configureAnchors({offset: 65,\n    onSectionEnter(newState, oldState){\n        setActiveLink(newState.hash)\n  }})\n  return (\n    <React.Fragment >\n                  <AppBar position=\"fixed\" color=\"secondary\" className={[classes.menuBar, props.topmenuToggled ? null: classes.collapsed ].join(' ')}>\n      <Container className={classes.flexContainer}>\n      <img src=\"/assets/logo_weird.png\" className={classes.logo} alt=\"recyclist logo\"/>\n      <Typography variant=\"h6\" align=\"center\" color=\"inherit\">\n            Recyclist\n        </Typography>\n            <Toolbar>\n                  {\n                        routes.map((route,key)=>{\n                            if(route.hashroutes){\n                                return(\n                                route.hashroutes.map((hash,key)=>\n                                    (\n                                        <HashLink\n                                        key={key}  className={classes.toolbarItem} variant=\"subtitle2\" align=\"center\" color={activeLink === hash ? 'textSecondary' : 'inherit'}\n                                        to={`#${hash}`}\n                                        scroll={el => {\n                                            const topOfElement = el.offsetTop - 65;\n                                            window.scroll({ top: topOfElement, behavior: \"smooth\" });\n                                        }\n                                        \n                                        }\n                                      >\n                                             {route.hashroutenames[key]}\n                                      \n                                      </HashLink>\n                                       \n                                            \n                                    \n                                    \n                                    )\n                                ))\n                            }\n                        })\n                    }\n            </Toolbar>\n      </Container>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Topmenu);\n","import * as layoutTypes from '../constants/layout.js'\n\nexport const toggleTopmenu = (payload) => ({ type: layoutTypes.TOGGLE_TOPMENU, payload: payload })\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction Footer() {\n  return (\n    <div >\n      \n\n\n      <Typography variant=\"body1\" color=\"inherit\">\n\n          FOOTER\n      </Typography>\n\n    </div>\n  );\n}\n\nexport default Footer;","import React, { Component,Suspense } from 'react';\nimport * as WebFont from \"webfontloader\";\nimport defaultFonts from './fonts'\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store.js'\nimport { Switch, Route } from 'react-router';\nimport { Provider } from 'react-redux';\nimport {Layout } from './components'\nimport routes from './routes';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst store = configureStore()\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      name: 'Recyclist'\n    };\n  }\n\n  loadFonts() {\n    console.log(defaultFonts)\n    WebFont.load({\n      google: {\n        families: defaultFonts\n      }\n    });\n  }\n  willMount(){\n    this.loadFonts();\n  }\n  render(){\n    return(\n\n      <Provider store={store}>\n       <CssBaseline />\n            <ConnectedRouter history={history}>\n\n            <Layout>\n                <Switch>\n                <Suspense fallback={<div>Loading...</div>}>\n                {routes.map((route,key)=><Route path={route.path} key={key} component={React.lazy(() => import(`./pages/${route.componentpath}`))} />)}\n              </Suspense>\n               \n              </Switch>\n            </Layout>\n              </ConnectedRouter>\n\n      </Provider>\n\n    )\n  }\n  \n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","\nconst routes = [\n    {\n        path: '/',\n        name: 'Landing',\n        componentpath: 'landing/landing.js',\n        hashroutenames: ['How it works', 'Section 2', 'Section 3', 'Section 4', 'Section 5'],\n        hashroutes: ['section1','section2','section3','section4','section5'],\n        \n    }\n  ]\n  export default routes"],"sourceRoot":""}